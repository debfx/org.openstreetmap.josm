--- a/josm	(revision 18499)
+++ b/josm	(working copy)
@@ -12,6 +12,23 @@
     JAVA_CMDS=""
 fi
 
+function updateHiDPI() {
+  # Java2D and Swing APIs use Xlib and support HiDPI via GDK_SCALE var
+  # http://hg.openjdk.java.net/jdk9/jdk9/jdk/rev/bc2d1130105f#l27.8
+  GDK_SCALE=1
+  is_natural_number='^[0-9]+$'
+  DPI=`xgetres Xft.dpi`
+  # if $DPI is a natural number, taken from https://stackoverflow.com/a/806923
+  if [[ $DPI =~ $is_natural_number ]] ; then
+     # float division in bash, taken from https://stackoverflow.com/a/21032001
+     SCALE=`echo "$DPI 96" | awk '{printf "%.1f \n", $1/$2}'`
+     # Round in bash, taken from https://stackoverflow.com/a/26465573
+     GDK_SCALE=$(LC_ALL=C printf "%.0f\n" $SCALE)
+  fi
+
+  export GDK_SCALE
+}
+
 dpkg_java() {
   # Let's get the current architecture -- needed for multiarchified Java
   ARCH=$(dpkg --print-architecture 2> /dev/null || true)
@@ -86,6 +103,7 @@
     fi
     set +e
     while true; do
+        updateHiDPI
         $JAVACMD $JAVA_OPTS -jar "${JOSM_PATH}" "$@"
         if [ "z$?" != "z9" ]; then
             break
